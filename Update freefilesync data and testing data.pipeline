pipeline {
    agent any

     parameters {
        string(name: 'BUILDER_NAME', defaultValue: 'weitsunglin', description: '你的名字')
        string(name: 'NEW_VERSION', defaultValue: '1.1.175', description: '新版本')
        choice(name: 'GAME_ENV', choices: ['android', 'ios'], description: '遊戲環境')
    }

    environment {
        REMOTE4463_CREDENTIALS ='remote4463_login'
        REMOTE4055_CREDENTIALS ='remote4055_login'
    }

    stages {
        stage('Create Testing folder') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'REMOTE4463_CREDENTIALS', passwordVariable: '4463REMOTE_PASSWORD', usernameVariable: '4463REMOTE_USER')]) {
                        withCredentials([usernamePassword(credentialsId: 'REMOTE4055_CREDENTIALS', passwordVariable: '4055REMOTE_PASSWORD', usernameVariable: '4055REMOTE_USER')]) {
                            def jumpHostUser = "${4463REMOTE_USER}@192.168.44.63"
                            def targetHostUser = "${4055REMOTE_USER}@192.168.40.55"
                            def sshCommand = "pwd"  // 在目标机器上执行的命令


                            def command = "sshpass -p '${4463REMOTE_PASSWORD}' ssh -o StrictHostKeyChecking=no -J ${jumpHostUser} ${targetHostUser} '${sshCommand}'"

                            sh "echo ${4463REMOTE_PASSWORD} | ${command}"
                        }
                    }
                }
            }
        }

        stage('Fix targetversion') {
            steps {
                script{
                    echo 'Fix targetversion'
                }
            }
        }
        stage('ReplaceBatchFlie') {
            steps {
                script{
                    echo 'ReplaceBatchFlie'
                }
            }
        }
         stage('Move ffsBatch') {
            steps {
                script{
                    echo 'Move ffsBatch'
                }
            }
        }
    }

    post {
        always {
            emailext(
                subject: "${currentBuild.currentResult} Update freefilesync data and testing data",
                body: "${currentBuild.currentResult}, Update freefilesync data and testing data",
                to: "${params.BUILDER_NAME}@igs.com.tw"
            )
        }
    }
}

def getRemoteConfig(host, user, password) {
    def remote = [:]
    remote.name = user
    remote.host = host
    remote.user = user
    remote.password = password
    remote.allowAnyHosts = true
    return remote
}