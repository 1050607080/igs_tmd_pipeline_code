pipeline {
    agent any

    environment {
        SVN = '/opt/homebrew/bin/svn'
        SVN_BASE_URL = 'http://192.168.1.183/svn/'
        CREDENTIALS_ID = '97731a4e-685d-4356-8c2b-d902c44ed6e9'
        PROJ_ANDROID_URL = "/Users/tmd/Documents/tmd/SouthPark/ClientCocos/proj.android/"
    }

    parameters {
        string(name: 'NAME', defaultValue: 'weitsunglin', description: '你的名字')
        //choice(name: 'INANNA', choices: ['Gt_MobileSDK', 'ReleaseAndroid','ReleaseIOS'], description: '選擇編譯平台(win,android,ios)')
        string(name: 'GAME_VERSION', defaultValue: '1.66.1', description: '遊戲版本')
        string(name: 'GAME_NAME', defaultValue: 'AliceSlot', description: '遊戲名稱')
        booleanParam(name: 'ENCODE', defaultValue: true, description: '加密Lua')
    }


    stages {

        stage('打包準備') {
            steps {
                script {
                    def gameNames = params.GAME_NAME.split(' ')
                    echo "需要打包的遊戲項目: ${gameNames}"
                }
            }
        }

        stage('SVN切平台資源') {
            steps {
                script {
                    /*def platform = ''
                    if (params.INANNA == 'Gt_MobileSDK') {
                        echo 'Building for Gt_MobileSDK...'
                        platform = 'Gt_MobileSDK'
                    } else if (params.INANNA == 'ReleaseAndroid') {
                        echo 'Building for Android...'
                        platform = 'ReleaseAndroid'
                    } else if (params.INANNA == 'ReleaseIOS') {
                        echo 'Building for iOS...'
                        platform = 'ReleaseIOS'
                    }
                    def svnTargetUrl = "${env.SVN_BASE_URL}Inanna/branches/${platform}"
                    dir("/Users/tmd/Documents/tmd/Inanna") {
                        withCredentials([usernamePassword(credentialsId: CREDENTIALS_ID, usernameVariable: 'SVN_USER', passwordVariable: 'SVN_PASSWORD')]) {
                            echo "切換到 SVN URL: ${svnTargetUrl}"
                            sh "${SVN} switch ${svnTargetUrl} --username $SVN_USER --password $SVN_PASSWORD"
                        }
                    }*/
                }
            }
        }

        stage('SVN切遊戲資源') {
            steps {
                script {
                    def gameNames = params.GAME_NAME.split(' ')
                    gameNames.each { gameName ->
                        def svnTargetUrl = "${env.SVN_BASE_URL}${gameName}/branches/Release"
                        def gamePath = "/Users/tmd/Documents/tmd/${gameName}"
                        dir(gamePath) {
                            withCredentials([usernamePassword(credentialsId: CREDENTIALS_ID, usernameVariable: 'SVN_USER', passwordVariable: 'SVN_PASSWORD')]) {
                                echo "切換到 SVN URL: ${svnTargetUrl}"
                                sh "${SVN} switch ${svnTargetUrl} --username $SVN_USER --password $SVN_PASSWORD"
                            }
                        }
                    }
                }
            }
        }

       stage('需要加密') {
            when {
                expression { params.ENCODE == true }
            }
            steps {
                echo "需要加密..."
                dir(PROJ_ANDROID_URL) {
                    
                }
            }
        }

        stage('不需加密') {
            when {
                expression { params.ENCODE == false }
            }
            steps {
                echo "不需加密..."
                dir(PROJ_ANDROID_URL) {
                    
                }
            }
        }

        stage('修正打包路徑') {
            steps {
                echo "修正build-cfg-original.json..."
                dir(PROJ_ANDROID_URL) {
                    
                }
            }
        }

        stage('開始打包') {
            steps {
                echo "開始打包..."
                dir(PROJ_ANDROID_URL) {
                    
                }
            }
        }

         stage('清理環境') {
            steps {
                echo "開始清理剛剛異動的內容..."
                dir(PROJ_ANDROID_URL) {
                    
                }
            }
        }
    }

    post {
        always {
            emailext(
                subject: "遊戲資源打包${currentBuild.currentResult}",
                body: "打包結果：${currentBuild.currentResult}",
                to: "${params.NAME}@igs.com.tw"
            )
        }
    }
}
