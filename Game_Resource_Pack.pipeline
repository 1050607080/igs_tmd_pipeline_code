def SVN_URLS = []

pipeline {
    agent any

    environment {
        SVN_INSTALL_PATH = '/opt/homebrew/bin/svn'
        SVN_BASE_URL = 'http://192.168.1.183/svn/'
        CREDENTIALS_ID = '97731a4e-685d-4356-8c2b-d902c44ed6e9'
        PROJ_ANDROID_URL = "/Users/tmd/Documents/tmd/SouthPark/ClientCocos/proj.android/"
        TMD_RESOURCES_URL = "/Users/tmd/Documents/tmd/"
    }

    parameters {
        string(name: 'NAME', defaultValue: 'weitsunglin', description: '你的名字')
        string(name: 'GAME_VERSION', defaultValue: '1.66.1', description: '遊戲版本')
        string(name: 'GAME_NAME', defaultValue: 'Inanna AliceSlot', description: '遊戲名稱')
        booleanParam(name: 'ENCODE', defaultValue: true, description: '加密Lua')
    }

    stages {

        stage('版本路徑撈取') {
            steps {
                script { 
                    dir("/Users/tmd/Desktop/home_brew_jenkins_data/") {
                        def output = sh(script: "python3 read_google_sheet.py ${params.GAME_VERSION} ${params.GAME_NAME}", returnStdout: true).trim()
                        echo "Python script output: ${output}"
                        SVN_URLS = output.split('\n')
                    }
                }
            }
        }

        stage('SVN切遊戲資源') {
            steps {
                script {
                    for(url in SVN_URLS) {
                        def cleanedOutput = url.replaceAll("[\\[\\]' ]", "")
                        def elements = cleanedOutput.split(",")

                        def gameName = elements[0]
                        def gameUrl = elements[1]

                        echo "Game Name: ${gameName}"
                        echo "Game URL: ${gameUrl}" 

                        dir(TMD_RESOURCES_URL+gameName+"/") {
                            withCredentials([usernamePassword(credentialsId: CREDENTIALS_ID, usernameVariable: 'SVN_USER', passwordVariable: 'SVN_PASSWORD')]) {
                                echo "切换到 SVN URL: ${gameUrl}"
                                sh(script: "${SVN_INSTALL_PATH} switch ${gameUrl} --username \$SVN_USER --password \$SVN_PASSWORD")
                            }
                        }
                    }
                }
            }
        }

        
       stage('資源需要加密') {
            when {
                expression { params.ENCODE == true }
            }
            steps {
                echo "加密成DAT..."
                dir(PROJ_ANDROID_URL) {
                    
                }
            }
        }

        stage('資源不需加密') {
            when {
                expression { params.ENCODE == false }
            }
            steps {
                echo "不需加密DAT..."
                dir(PROJ_ANDROID_URL) {
                    
                }
            }
        }

        stage('修改打包路徑') {
            steps {
                echo "修改build-cfg-original.json..."
                script {
                    // JSON 内容
                    def jsonContent = "{
                        "copy_resources": [
                            {
                                "from": "../../../Cocos2d-x/cocos/scripting/lua-bindings/script",
                                "to": "cocos",
                                "zip": false
                            },
                            {
                                "from": "../../../Inanna/InannaResource",
                                "to": "InannaResource",
                                "zip": true
                            },
                            {
                                "from": "../../../Inanna/InannaLua",
                                "to": "InannaLua",
                                "zip": true
                            }
                        ]
                    }"
                 
                    writeFile file: PROJ_ANDROID_URL+"build-cfg-original.json", text: jsonContent   
                    echo "JSON file has been generated at: ${PROJ_ANDROID_URL}"
                }
            }
        }

        stage('開始打包') {
            steps {
                echo "開始打包..."
                dir(PROJ_ANDROID_URL) {
                    
                }
            }
        }

         stage('清理環境') {
            steps {
                echo "開始清理剛剛異動的內容..."
                dir(PROJ_ANDROID_URL) {
                    //清理build-cfg-original.json
                    
                }
            }
        }
    }

    post {
        always {
            emailext(
                subject: "遊戲資源打包: ${currentBuild.currentResult}",
                body: "打包結果: ${currentBuild.currentResult}",
                to: "${params.NAME}@igs.com.tw"
            )
        }
    }
}