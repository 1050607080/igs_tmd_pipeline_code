pipeline {
    agent any

    environment {
        SVN = '/opt/homebrew/bin/svn'
        SVN_BASE_URL = 'http://192.168.1.183/svn/'
        CREDENTIALS_ID = '97731a4e-685d-4356-8c2b-d902c44ed6e9'
    }

    parameters {
        string(name: 'NAME', defaultValue: 'weitsunglin', description: '你的名字')
        string(name: 'GAME_NAME', defaultValue: 'Inanna AliceSlot', description: '遊戲名稱')
        string(name: 'GAME_VERSION', defaultValue: '1.66.1', description: '版本')
        booleanParam(name: 'ENCODE', defaultValue: true, description: '加密Lua')
    }

    stages {
        stage('準備') {
            steps {
                script {
                    // 分割 GAME_NAME 为数组
                    def gameNames = params.GAME_NAME.split(' ')
                    // 打印分割后的数组，用于调试
                    echo "游戲名稱数组: ${gameNames}"
                }
            }
        }

        stage('SVN') {
            steps {
                script {
                    def gameNames = params.GAME_NAME.split(' ')
                    gameNames.each { gameName ->
                        // 使用游戲名稱动态构建 SVN 目标 URL
                        def svnTargetUrl = "${env.SVN_BASE_URL}${gameName}/trunk"
                        // 动态构建的目录路径也使用游戲名稱
                        def gamePath = "/Users/tmd/Documents/tmd/${gameName}"
                        dir(gamePath) {
                            withCredentials([usernamePassword(credentialsId: CREDENTIALS_ID, usernameVariable: 'SVN_USER', passwordVariable: 'SVN_PASSWORD')]) {
                                echo "切换到 SVN URL: ${svnTargetUrl}"
                                sh "${SVN} switch ${svnTargetUrl} --username $SVN_USER --password $SVN_PASSWORD"
                            }
                        }
                    }
                }
            }
        }

        stage('加密') {
            when {
                expression { params.ENCODE == true }
            }
            steps {
                echo "加密..."
            }
        }

        stage('不加密') {
            when {
                expression { params.ENCODE == false }
            }
            steps {
                echo "不加密..."
            }
        }

        stage('打包') {
            steps {
                echo "開始打包..."
            }
        }
    }

    post {
        always {
            emailext(
                subject: "遊戲資源打包${currentBuild.currentResult}",
                body: "打包結果：${currentBuild.currentResult}",
                to: "${params.NAME}@igs.com.tw"
            )
        }
    }
}
