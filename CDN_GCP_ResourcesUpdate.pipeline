pipeline {
    agent any

    environment {
        REMOTE_CREDENTIALS = 'remote44102_login'
    }

    parameters {
        string(name: 'BUILDER_NAME', defaultValue: 'weitsunglin', description: '你的名字')
        choice(name: 'UPDATE_TARGET', choices: ['androidtesting', 'iostesting'], description: '更新資源')
    }

    stages {
        stage('Copy production Resources to testing Resources') {
            steps {
                script {
                    echo "Copy production Resources to testing Resources"

                    withCredentials([usernamePassword(credentialsId: REMOTE_CREDENTIALS, passwordVariable: 'PASSWORD', usernameVariable: 'USER')]) {
                        try {
                            def remote = getRemoteConfig('192.168.44.102', USER, PASSWORD)
                            if (params.UPDATE_TARGET == 'androidtesting') {
                                // 清空 androidtesting 
                                def clearCommand = "powershell -Command \"Remove-Item -Path 'D:\\webGame\\Game\\TMD_mobile\\data\\androidtesting\\*' -Recurse -Force\""
                                sshCommand remote: remote, command: clearCommand
                                
                                // 複製 android 到 androidtesting
                                def copyCommand = "powershell -Command \"Copy-Item -Path 'D:\\webGame\\Game\\TMD_mobile\\data\\android\\*' -Destination 'D:\\webGame\\Game\\TMD_mobile\\data\\androidtesting' -Recurse -Force\""
                                sshCommand remote: remote, command: copyCommand
                            } else if (params.UPDATE_TARGET == 'iostesting') {
                                // 清空 iostesting
                                def clearCommand = "powershell -Command \"Remove-Item -Path 'D:\\webGame\\Game\\TMD_mobile\\data\\iostesting\\*' -Recurse -Force\""
                                sshCommand remote: remote, command: clearCommand
                                
                                // 複製 ios 到 iostesting
                                def copyCommand = "powershell -Command \"Copy-Item -Path 'D:\\webGame\\Game\\TMD_mobile\\data\\ios\\*' -Destination 'D:\\webGame\\Game\\TMD_mobile\\data\\iostesting' -Recurse -Force\""
                                sshCommand remote: remote, command: copyCommand
                            }
                        } catch (Exception e) {
                            echo "An error occurred: ${e.getMessage()}"
                            throw e
                        }
                    }
                }
            }
        }

        stage('Resources GCP update') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: REMOTE_CREDENTIALS, passwordVariable: 'PASSWORD', usernameVariable: 'USER')]) {
                        if (params.UPDATE_TARGET == 'androidtesting') {
                            echo "androidtesting"
                            def remote = getRemoteConfig('192.168.44.102', USER, PASSWORD)
                            def command = "C:/Users/Administrator/Desktop/TMD_Client/送審專用/jenkins_update_cdn_gcp/android/1_GCP更新Resource.bat"
                            sshCommand remote: remote, command: command
                        } else if (params.UPDATE_TARGET == 'iostesting') {
                            echo "iostesting"
                            def remote = getRemoteConfig('192.168.44.102', USER, PASSWORD)
                            def command = "C:/Users/Administrator/Desktop/TMD_Client/送審專用/jenkins_update_cdn_gcp/ios/1_GCP更新Resource.bat"
                            sshCommand remote: remote, command: command
                        }
                    }
                }
            }
        }

        stage('Resources GCP purge 1') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: REMOTE_CREDENTIALS, passwordVariable: 'PASSWORD', usernameVariable: 'USER')]) {
                        if (params.UPDATE_TARGET == 'androidtesting') {
                            echo "androidtesting"
                            def remote = getRemoteConfig('192.168.44.102', USER, PASSWORD)
                            def command = "C:/Users/Administrator/Desktop/TMD_Client/送審專用/jenkins_update_cdn_gcp/android/2_GCP清除快取資源.bat"
                            sshCommand remote: remote, command: command
                        } else if (params.UPDATE_TARGET == 'iostesting') {
                            echo "iostesting"
                            def remote = getRemoteConfig('192.168.44.102', USER, PASSWORD)
                            def command = "C:/Users/Administrator/Desktop/TMD_Client/送審專用/jenkins_update_cdn_gcp/ios/2_GCP清除快取資源.bat"
                            sshCommand remote: remote, command: command
                        }
                    }
                }
            }
        }

        stage('Resources CDN update') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: REMOTE_CREDENTIALS, passwordVariable: 'PASSWORD', usernameVariable: 'USER')]) {
                        if (params.UPDATE_TARGET == 'androidtesting') {
                            echo "androidtesting"
                            def remote = getRemoteConfig('192.168.44.102', USER, PASSWORD)
                            def command = "C:/Users/Administrator/Desktop/TMD_Client/送審專用/jenkins_update_cdn_gcp/android/3_CDN更新Resource.bat"
                            sshCommand remote: remote, command: command
                        } else if (params.UPDATE_TARGET == 'iostesting') {
                            echo "iostesting"
                            def remote = getRemoteConfig('192.168.44.102', USER, PASSWORD)
                            def command = "C:/Users/Administrator/Desktop/TMD_Client/送審專用/jenkins_update_cdn_gcp/ios/3_CDN更新Resource.bat"
                            sshCommand remote: remote, command: command
                        }
                    }
                }
            }
        }

        stage('Resources version GCP update') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: REMOTE_CREDENTIALS, passwordVariable: 'PASSWORD', usernameVariable: 'USER')]) {
                        if (params.UPDATE_TARGET == 'androidtesting') {
                            echo "androidtesting"
                            def remote = getRemoteConfig('192.168.44.102', USER, PASSWORD)
                            def command = "C:/Users/Administrator/Desktop/TMD_Client/送審專用/jenkins_update_cdn_gcp/android/5_GCP更新Version.bat"
                            sshCommand remote: remote, command: command
                        } else if (params.UPDATE_TARGET == 'iostesting') {
                            echo "iostesting"
                            def remote = getRemoteConfig('192.168.44.102', USER, PASSWORD)
                            def command = "C:/Users/Administrator/Desktop/TMD_Client/送審專用/jenkins_update_cdn_gcp/ios/5_GCP更新Version.bat"
                            sshCommand remote: remote, command: command
                        }
                    }
                }
            }
        }

         stage('Resources GCP purge 2') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: REMOTE_CREDENTIALS, passwordVariable: 'PASSWORD', usernameVariable: 'USER')]) {
                        if (params.UPDATE_TARGET == 'androidtesting') {
                            echo "androidtesting"
                            def remote = getRemoteConfig('192.168.44.102', USER, PASSWORD)
                            def command = "C:/Users/Administrator/Desktop/TMD_Client/送審專用/jenkins_update_cdn_gcp/android/6_GCP清除快取資源.bat"
                            sshCommand remote: remote, command: command
                        } else if (params.UPDATE_TARGET == 'iostesting') {
                            echo "iostesting"
                            def remote = getRemoteConfig('192.168.44.102', USER, PASSWORD)
                            def command = "C:/Users/Administrator/Desktop/TMD_Client/送審專用/jenkins_update_cdn_gcp/ios/6_GCP清除快取資源.bat"
                            sshCommand remote: remote, command: command
                        }
                    }
                }
            }
        }

        stage('Resources version CDN update') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: REMOTE_CREDENTIALS, passwordVariable: 'PASSWORD', usernameVariable: 'USER')]) {
                        if (params.UPDATE_TARGET == 'androidtesting') {
                            echo "androidtesting"
                            def remote = getRemoteConfig('192.168.44.102', USER, PASSWORD)
                            def command = "C:/Users/Administrator/Desktop/TMD_Client/送審專用/jenkins_update_cdn_gcp/android/7_CDN更新Version.bat"
                            sshCommand remote: remote, command: command
                        } else if (params.UPDATE_TARGET == 'iostesting') {
                            echo "iostesting"
                            def remote = getRemoteConfig('192.168.44.102', USER, PASSWORD)
                            def command = "C:/Users/Administrator/Desktop/TMD_Client/送審專用/jenkins_update_cdn_gcp/ios/7_CDN更新Version.bat"
                            sshCommand remote: remote, command: command
                        }
                    }
                }
            }
        }
    }
}

def getRemoteConfig(host, user, password) {
    def remote = [:]
    remote.name = user
    remote.host = host
    remote.user = user
    remote.password = password
    remote.allowAnyHosts = true
    return remote
}