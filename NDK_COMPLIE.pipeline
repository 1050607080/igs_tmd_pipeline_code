pipeline {
    agent any

    parameters {
        string(name: 'BUILDER_NAME', defaultValue: 'weitsunglin', description: '你的名字')
        choice(name: 'ANDROID_VERSION', choices: ['store', 'offical'], description: '底層版本')
    }

    stages {

        stage('Delete Resources') {
            steps {
                script {
                    echo"Delete libs & obj"
                    sh "rm -rf /Users/tmd/Documents/tmd/SouthPark/ClientCocos/proj.android/libs*"
                    sh "rm -rf /Users/tmd/Documents/tmd/SouthPark/ClientCocos/proj.android/obj*"
                }
            }
        }

        stage('Build Prepare') {
            steps {
                script {
                    echo "Build Prepare"
                    def filePath = '/Users/tmd/Documents/tmd/Inanna/Android.mk'
                    def fileContent = readFile(filePath).split("\n")
                    def newContent = []
                    def androidVersion = params.ANDROID_VERSION

                    fileContent.each { line ->
                        // 確保 line 不是 null
                        if (line != null) {
                            // 條件判斷如之前所述...
                            if (line.trim().startsWith("#LOCAL_CFLAGS += -DOFFICIAL_VERSION") && androidVersion == 'official') {
                                newContent.add(line.trim().substring(1))
                            } else if (!line.trim().startsWith("#") && line.trim().contains("LOCAL_CFLAGS += -DOFFICIAL_VERSION") && androidVersion == 'store') {
                                newContent.add("#" + line)
                            } else {
                                newContent.add(line)
                            }
                        }
                    }

                    // 確保 newContent 不包含 null 之後再寫入
                    if (newContent.any { it == null }) {
                        echo "Error: newContent contains null values."
                    } else {
                        writeFile(file: filePath, data: newContent.join("\n"))
                    }
                }
            }
        }

        stage('Build NDK') {
            steps {
                script {
                    echo"Build NDK"
                }
            }
        }

        stage('Copy Resources') {
            steps {
                script {
                    echo"Copy resources"
                }
            }
        }
    }

    post {
        success {
            emailext(
                subject: "ndk編譯底層成功，底層版本${params.ANDROID_VERSION}",
                body: "ndk編譯底層成功",
                to: "${params.BUILDER_NAME}@igs.com.tw"
            )
        }
        failure {
            emailext(
                subject: "ndk編譯底層失敗，底層版本${params.ANDROID_VERSION}",
                body: "ndk編譯底層失敗",
                to:  "${params.BUILDER_NAME}@igs.com.tw"
            )
        }
    }
}